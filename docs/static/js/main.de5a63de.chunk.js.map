{"version":3,"sources":["components/layouts/Navbar.js","services/apis/restaurant.js","utils/array.js","components/web/Home/RestaurantTitle.js","components/web/Home/RestaurantStar.js","components/web/Home/RestaurantList.js","redux/restaurant/selectors.js","redux/ui-Home/selectors.js","redux/ui-Home/actions.js","components/web/Home/SidebarFilters.js","redux/restaurant/actions.js","components/elements/Pagination.js","views/Home.js","utils/pagination.js","components/web/RestaurantDetail/Header.js","components/web/RestaurantDetail/Gallery.js","components/web/RestaurantDetail/Information.js","views/RestaurantDetail.js","routes/index.js","components/layouts/MainLayout.js","redux/ui-Home/reducers.js","redux/restaurant/reducers.js","redux/root-reducer.js","app/store.js","app/App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","URL","get","axios","this","Arr","fromNumber","arrayLength","length","parseInt","isNaN","Array","Math","floor","keys","RestaurantTitle","props","restaurant","price","substr","map","star","key","category","name","district","RestaurantStar","note","RestaurantList","useState","redirect","setRedirect","restaurants","id","onClick","PreviewImage","src","RestaurantAPI","cover","url","style","styles","halfWidth","styled","img","width","getRestaurants","state","getCategoryFilters","uiHome","categoryFilters","getNeighborhoodFilters","neighborhoodFilters","getFilteredRestaurants","filteredCategories","Object","filter","filteredNeighborhoods","includes","substring","actionTypes","Filter","dataSource","onSelect","type","checked","onChange","htmlFor","mapDispatchToProps","selectCategoryFilter","dispatch","selectNeighborhoodFilter","neighborhood","connect","fetchRestaurantsIfNeeded","then","res","data","catch","console","log","Pagination","currentPage","perPage","totalPage","ceil","activeClass","number","aria-label","href","defaultProps","filteredRestaurants","page","useParams","history","useHistory","firstRender","useRef","start","end","slice","byPagination","useEffect","current","push","Header","Gallery","highlightId","setHighlighId","highlightCover","find","firstId","lastId","HightlightImage","ImageButtonContainer","ChangeImageButton","SmallImage","div","Information","role","data-toggle","aria-controls","aria-selected","aria-labelledby","opening_hours","time","day_interval","opening_hour","closing_hour","description","address","website","phone","reviews","review","content","index","exact","path","Layout","initialState","ALL","French","Contemporary","Italian","Mexican","Burgers","Fusion","toggleCategoryFilter","action","toggleNeighborhoodFilter","reducer","isFetched","setRestaurants","combineReducers","middleware","thunk","store","createStore","rootReducer","applyMiddleware","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.de5a63de.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <div className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\">\r\n            <h5 className=\"my-0 mr-md-auto font-weight-normal\">App</h5>\r\n            <nav className=\"my-2 my-md-0 mr-md-3\">\r\n                <Link className=\"p-2 text-dark\" to=\"/\"> All Restaurant </Link>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios'\r\n\r\nexport default {\r\n    URL: 'https://strapi.privatus.tech',\r\n    get() {\r\n        return axios.get(this.URL + '/restaurants')\r\n    }\r\n}","const Arr = {\r\n    fromNumber(arrayLength) {\r\n        const length = parseInt(arrayLength)\r\n        if (typeof length === 'number' && !isNaN(length)) {\r\n            return [...Array(Math.floor(length)).keys()]\r\n        }\r\n        return []\r\n    }\r\n}\r\n\r\nexport default Arr","import React, { Fragment } from 'react'\r\nimport Arr from '../../../utils/array'\r\n\r\nexport default function RestaurantTitle(props) {\r\n    const { restaurant } = props\r\n\r\n    return (\r\n        <Fragment>\r\n            {Arr.fromNumber(restaurant.price.substr(1)).map((star, key) => (\r\n                <i key={key} className=\"fa fa-dollar\" />\r\n            ))}\r\n            -\r\n            {restaurant.category.name}\r\n            -\r\n            {restaurant.district.substr(1)}\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport Arr from '../../../utils/array'\r\n\r\nexport default function RestaurantStar(props) {\r\n    const { note } = props\r\n    \r\n    return (\r\n        <Fragment>\r\n            {Arr.fromNumber(note).map((star, key) => (\r\n                <i key={key} className=\"fa fa-star\" />\r\n            ))}\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport RestaurantAPI from '../../../services/apis/restaurant'\r\nimport { Redirect } from 'react-router-dom'\r\nimport RestaurantTitle from './RestaurantTitle'\r\nimport RestaurantStar from './RestaurantStar'\r\nimport styled from 'styled-components'\r\n\r\nexport default function RestaurantList(props) {\r\n    const [redirect, setRedirect] = useState(null)\r\n    const { restaurants } = props\r\n\r\n    function redirectToDetail(id) {\r\n        setRedirect(`/restaurant/${id}`)\r\n    }\r\n\r\n    if (redirect) {\r\n        return <Redirect to={redirect} />\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            {restaurants.map((restaurant) => (\r\n                <div className=\"col-6 p-3\" key={restaurant.id}>\r\n                    <div className=\"card mb-4 mr-4 shadow-sm\">\r\n                        <div className=\"card-body\" onClick={() => redirectToDetail(restaurant.id)}>\r\n                            <PreviewImage src={RestaurantAPI.URL + restaurant.cover[0].url} />\r\n                            <div className=\"restaurant-name text-left mb-2\">\r\n                                <strong>{restaurant.name}</strong>\r\n                            </div>\r\n                            <div className=\"d-flex restaurant-desc\">\r\n                                <div className=\"restaurant-content text-left\" style={styles.halfWidth}>\r\n                                    <RestaurantTitle restaurant={restaurant} />\r\n                                </div>\r\n                                <div className=\"restaurant-star text-left\" style={styles.halfWidth}>\r\n                                    <RestaurantStar note={restaurant.note} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PreviewImage = styled.img`\r\n    object-fit: cover;\r\n    width: 100%;\r\n    height: 180px;\r\n`\r\n\r\nconst styles = {\r\n    halfWidth: { width: '50%' }\r\n}\r\n\r\nRestaurantList.propTypes = {\r\n    restaurants: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n","export function getRestaurants(state) {\r\n    return state.restaurant.restaurants\r\n}","import { getRestaurants } from '../restaurant/selectors'\r\n\r\nexport function getCategoryFilters(state) {\r\n    return state.uiHome.categoryFilters\r\n}\r\n\r\nexport function getNeighborhoodFilters(state) {\r\n    return state.uiHome.neighborhoodFilters\r\n}\r\n\r\nexport function getFilteredRestaurants(state) {\r\n    const categoryFilters = getCategoryFilters(state)\r\n    const neighborhoodFilters = getNeighborhoodFilters(state)\r\n    const filteredCategories = Object.keys(categoryFilters).filter(key => categoryFilters[key] === true)\r\n    const filteredNeighborhoods = Object.keys(neighborhoodFilters).filter(key => neighborhoodFilters[key] === true)\r\n    const restaurants = getRestaurants(state)\r\n\r\n    function categoryMatched(restaurant) {\r\n        return filteredCategories.length === 0 || filteredCategories.includes('ALL') || filteredCategories.includes(restaurant.category.name)\r\n    }\r\n\r\n    function neighborhoodMatched(restaurant) {\r\n        return filteredNeighborhoods.length === 0 || filteredNeighborhoods.includes(restaurant.district.substring(1))\r\n    }\r\n\r\n    return restaurants.filter(categoryMatched).filter(neighborhoodMatched)\r\n}","export const actionTypes = {\r\n    SELECT_CATEGORY_FILTER: 'ui-Home/select_category_filter',\r\n    SELECT_NEIGHBORHOOD_FILTER: 'ui-Home/select_neighborhood_filter'\r\n}\r\n\r\nexport function selectCategoryFilter(category) {\r\n    return function (dispatch) {\r\n        return dispatch({\r\n            type: actionTypes.SELECT_CATEGORY_FILTER,\r\n            category\r\n        })\r\n    }\r\n}\r\n\r\nexport function selectNeighborhoodFilter(neighborhood) {\r\n    return function (dispatch) {\r\n        return dispatch({\r\n            type: actionTypes.SELECT_NEIGHBORHOOD_FILTER,\r\n            neighborhood\r\n        })\r\n    }\r\n}","import React, { Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getCategoryFilters, getNeighborhoodFilters } from '../../../redux/ui-Home/selectors'\r\nimport { selectCategoryFilter, selectNeighborhoodFilter } from '../../../redux/ui-Home/actions'\r\n\r\nfunction SidebarFilters(props) {\r\n    const { categoryFilters, neighborhoodFilters, selectCategoryFilter, selectNeighborhoodFilter } = props\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"mt-2\">\r\n                <strong>Categories (Optional)</strong>\r\n                <Filter dataSource={categoryFilters} onSelect={selectCategoryFilter} /> \r\n                <hr />\r\n                <strong>Neighborhood (Optional)</strong>\r\n                <Filter dataSource={neighborhoodFilters} onSelect={selectNeighborhoodFilter} />\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nfunction Filter(props) {\r\n    const { dataSource, onSelect } = props\r\n    \r\n    return (\r\n        <ul className=\"list-group list-group-flush card\">\r\n            {Object.keys(dataSource).map(key => (\r\n                <li key={key} className=\"list-group-item text-left\">\r\n                    <input id={key} type=\"checkbox\" className=\"mr-2\" checked={dataSource[key]} onChange={() => onSelect(key)} />\r\n                    <label htmlFor={key}>{key}</label>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        categoryFilters: getCategoryFilters(state),\r\n        neighborhoodFilters: getNeighborhoodFilters(state)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    selectCategoryFilter,\r\n    selectNeighborhoodFilter\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (SidebarFilters)","import RestaurantAPI from '../../services/apis/restaurant'\r\n\r\nexport const actionTypes = {\r\n    RESTAURANTS_FETCHED: 'restaurant/restaurants-fetched',\r\n}\r\n\r\nexport function restaurantsFetched(restaurants) {\r\n    return {\r\n        type: actionTypes.RESTAURANTS_FETCHED,\r\n        restaurants\r\n    }\r\n}\r\n\r\nexport function fetchRestaurantsIfNeeded() {\r\n    return function (dispatch) {\r\n        return RestaurantAPI.get()\r\n            .then(res => dispatch(restaurantsFetched(res.data)))\r\n            .catch(console.log)\r\n    }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Arr from '../../utils/array'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Pagination(props) {\r\n    const { currentPage, perPage, dataSource } = props \r\n    const totalPage = Math.ceil(dataSource.length / perPage)\r\n    \r\n    function activeClass(number) {\r\n        if (currentPage === number+1) {\r\n            return \"page-item active\"\r\n        }\r\n        return \"page-item\"\r\n    }\r\n\r\n    if (dataSource.length === 0) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <nav aria-label=\"pagination\">\r\n            <ul className=\"pagination pagination-lg\">\r\n                {Arr.fromNumber(totalPage).map((number) => (\r\n                    <li key={number} className={activeClass(number)}>\r\n                        <Link to={`/page/${number+1}`} className=\"page-link\" href=\"#\">{number+1}</Link>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nPagination.defaultProps = {\r\n    currentPage: 1,\r\n    perPage: 10,\r\n    dataSource: []\r\n}\r\n\r\nPagination.propTypes = {\r\n    currentPage: PropTypes.number,\r\n    perPage: PropTypes.number,\r\n    dataSource: PropTypes.array\r\n}\r\n\r\n","import React, { useEffect, Fragment, useRef, useState } from 'react'\r\nimport RestaurantList from '../components/web/Home/RestaurantList'\r\nimport SidebarFilters from '../components/web/Home/SidebarFilters'\r\nimport { connect } from 'react-redux'\r\nimport { fetchRestaurantsIfNeeded } from '../redux/restaurant/actions'\r\nimport { getFilteredRestaurants, getCategoryFilters, getNeighborhoodFilters } from '../redux/ui-Home/selectors'\r\nimport { useParams, useHistory } from 'react-router'\r\nimport { byPagination } from '../utils/pagination'\r\nimport Pagination from '../components/elements/Pagination'\r\n\r\nfunction Home(props) {\r\n    const { categoryFilters, neighborhoodFilters, filteredRestaurants, fetchRestaurantsIfNeeded } = props\r\n    const { page } = useParams()\r\n    const history = useHistory()\r\n    const firstRender = useRef(true)\r\n    const currentPage = parseInt(page || 1)\r\n    const perPage = 4\r\n    const restaurants = byPagination(filteredRestaurants, perPage, currentPage)\r\n\r\n    useEffect(() => {\r\n        if (firstRender.current) {\r\n            firstRender.current = false;\r\n            return;\r\n        }\r\n        history.push('/page/1');\r\n    }, [categoryFilters, neighborhoodFilters])\r\n\r\n    useEffect(() => {\r\n        fetchRestaurantsIfNeeded()\r\n    }, [])\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"col-3\">\r\n                <SidebarFilters />\r\n            </div>\r\n            <div className=\"col-9\">\r\n                <RestaurantList restaurants={restaurants} />\r\n                <Pagination currentPage={currentPage} perPage={perPage} dataSource={filteredRestaurants} />\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        categoryFilters: getCategoryFilters(state),\r\n        neighborhoodFilters: getNeighborhoodFilters(state),\r\n        filteredRestaurants: getFilteredRestaurants(state)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    fetchRestaurantsIfNeeded\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\r\n","\r\nexport function byPagination(dataSource = [], perPage = 4, currentPage = 1) {\r\n    const start = (perPage * (currentPage  - 1))\r\n    const end = perPage * currentPage\r\n\r\n    return dataSource.slice(start, end)\r\n}","import React from 'react'\r\nimport RestaurantTitle from '../Home/RestaurantTitle'\r\nimport RestaurantStar from '../Home/RestaurantStar'\r\n\r\nexport default function Header(props) {\r\n    const { restaurant } = props\r\n\r\n    return (\r\n        <div className=\"h5\">\r\n            <div className=\"mb-2\">{restaurant.name}</div>\r\n            <div className=\"mb-2\">\r\n                <RestaurantTitle restaurant={restaurant} />\r\n            </div>\r\n            <div>\r\n                <RestaurantStar note={restaurant.note} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport RestaurantAPI from '../../../services/apis/restaurant'\r\nimport styled from 'styled-components'\r\n\r\nexport default function Gallery(props) {\r\n    const { restaurant } = props\r\n    const [highlightId, setHighlighId] = useState(restaurant.cover[0].id)\r\n    const highlightCover = restaurant.cover.find(cover => cover.id === highlightId)\r\n\r\n    const firstId = restaurant.cover[0].id\r\n    const lastId = restaurant.cover[restaurant.cover.length - 1].id\r\n\r\n    function prevImage() {\r\n        if (highlightId - 1 < firstId) {\r\n            setHighlighId(lastId)\r\n        } else {\r\n            const prevId = highlightId - 1\r\n            setHighlighId(prevId)\r\n        }\r\n    }\r\n\r\n    function nextImage() {\r\n        if (highlightId + 1 > lastId) {\r\n            setHighlighId(firstId)\r\n        } else {\r\n            const nextId = highlightId + 1\r\n            setHighlighId(nextId)\r\n        }\r\n    }\r\n\r\n    function withoutHighlighted(cover) {\r\n        return cover.id !== highlightId\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-10\">\r\n                <HightlightImage src={RestaurantAPI.URL + highlightCover.url} />\r\n                <ImageButtonContainer className=\"d-flex\">\r\n                    <ChangeImageButton className=\"mr-2\" onClick={prevImage}>{'<'}</ChangeImageButton>\r\n                    <ChangeImageButton onClick={nextImage}>{'>'}</ChangeImageButton>\r\n                </ImageButtonContainer>\r\n            </div>\r\n            <div className=\"col-2\">\r\n                <div className=\"d-flex flex-column\">\r\n                    {restaurant.cover.filter(withoutHighlighted).map((cover, key) => (\r\n                        <SmallImage \r\n                            key={key} \r\n                            src={RestaurantAPI.URL + cover.url} \r\n                            onClick={() => setHighlighId(cover.id)} \r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ImageButtonContainer = styled.div`\r\n    position: absolute;\r\n    margin-top: -20px; \r\n    margin-left: 20px;\r\n`\r\n\r\nconst ChangeImageButton = styled.div`\r\n    display: block;\r\n    color: white;\r\n    background-color: black;\r\n    padding: 0.5rem 0;\r\n    width: 50px;\r\n    height: 40px;\r\n    text-align: center;\r\n    &:hover {\r\n        cursor: pointer;\r\n    }\r\n`\r\n\r\nconst HightlightImage = styled.img`\r\n    object-fit: cover;\r\n    width: 100%; \r\n    height: 450px;\r\n`\r\n\r\nconst SmallImage = styled.img`\r\n    object-fit: cover;\r\n    width: 100%;\r\n    height: 150px;\r\n`","import React, { Fragment } from 'react'\r\nimport RestaurantStar from '../Home/RestaurantStar'\r\n\r\nexport default function Information(props) {\r\n    const { restaurant } = props\r\n\r\n    return (\r\n        <Fragment>\r\n            <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link active\" data-toggle=\"tab\" href=\"#information-tab\" role=\"tab\" aria-controls=\"information-tab\" aria-selected=\"true\">\r\n                        Information\r\n                    </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" data-toggle=\"tab\" href=\"#review-tab\" role=\"tab\" aria-controls=\"review-tab\" aria-selected=\"false\">\r\n                        Review\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n            <div className=\"tab-content\" id=\"myTabContent\">\r\n                <div className=\"tab-pane fade show active p-3\" id=\"information-tab\" role=\"tabpanel\" aria-labelledby=\"information-tab\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4\">\r\n                            <h6>Opening Hours</h6>\r\n                            <div>\r\n                                {restaurant.opening_hours.map((time, key) => (\r\n                                    <Fragment key={key}>\r\n                                        <div>{time.day_interval}</div>\r\n                                        <div>{time.opening_hour} - {time.closing_hour}</div>\r\n                                    </Fragment>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <h6>Details</h6>\r\n                            <p>{restaurant.description}</p>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <h6>Location</h6>\r\n                            <p>{restaurant.address}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"offset-4 col-4\">\r\n                            <h6>Neighborhood</h6>\r\n                            <p>{restaurant.district}</p>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <h6>Website</h6>\r\n                            <p>{restaurant.website}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"offset-8 col-4\">\r\n                            <h6>Phone</h6>\r\n                            <p>{restaurant.phone}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"tab-pane fade p-3\" id=\"review-tab\" role=\"tabpanel\" aria-labelledby=\"review-tab\">\r\n                    {restaurant.reviews.map((review, key) => (\r\n                        <div key={key} className=\"card card-body\">\r\n                           \r\n                            <div><RestaurantStar note={review.note} /></div>\r\n                            <p>{review.content}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport Header from '../components/web/RestaurantDetail/Header'\r\nimport Gallery from '../components/web/RestaurantDetail/Gallery'\r\nimport Information from '../components/web/RestaurantDetail/Information'\r\nimport { useParams } from 'react-router'\r\nimport { connect } from 'react-redux'\r\nimport { fetchRestaurantsIfNeeded } from '../redux/restaurant/actions'\r\nimport { getRestaurants } from '../redux/restaurant/selectors'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction RestaurantDetail(props) {\r\n    const { restaurants, fetchRestaurantsIfNeeded } = props\r\n    const { id } = useParams()\r\n    const restaurant = restaurants.find(res => res.id === parseInt(id))\r\n\r\n    useEffect(() => {\r\n        fetchRestaurantsIfNeeded()\r\n    }, [])\r\n\r\n    if (! restaurant){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-12\">\r\n            <div className=\"mb-4\">\r\n                <Link className=\"p-2 text-dark\" to=\"/\"> {'<- Back'} </Link>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <Header restaurant={restaurant} />\r\n            </div>\r\n            <div className=\"mb-5\">\r\n                <Gallery restaurant={restaurant} />\r\n            </div>\r\n            <div>\r\n                <Information restaurant={restaurant} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        restaurants: getRestaurants(state)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    fetchRestaurantsIfNeeded\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RestaurantDetail)\r\n","import React from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Home from '../views/Home'\r\nimport RestaurantDetail from '../views/RestaurantDetail'\r\n\r\nexport default function index() {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n                <Home />\r\n            </Route>\r\n            <Route exact path=\"/page/:page\">\r\n                <Home />\r\n            </Route>\r\n            <Route exact path=\"/restaurant/:id\">\r\n                <RestaurantDetail />\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Navbar from './Navbar'\r\nimport Routes from '../../routes/index'\r\n\r\nexport default function Layout() {\r\n    return (\r\n        <main role=\"main\">\r\n            <Navbar />\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Routes />\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n","import { actionTypes } from './actions'\r\n\r\nconst initialState = {\r\n    categoryFilters: {\r\n        ALL: false,\r\n        French: false,\r\n        Contemporary: false,\r\n        Italian: false,\r\n        Mexican: false,\r\n        Burgers: false,\r\n        Fusion: false,\r\n    },\r\n    neighborhoodFilters: {\r\n        '1st': false,\r\n        '2nd': false,\r\n        '3rd': false,\r\n        '4th': false,\r\n        '5th': false\r\n    }\r\n}\r\n\r\nfunction reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case actionTypes.SELECT_CATEGORY_FILTER:\r\n            return toggleCategoryFilter(state, action)\r\n\r\n        case actionTypes.SELECT_NEIGHBORHOOD_FILTER:\r\n            return toggleNeighborhoodFilter(state, action)\r\n\r\n        default :\r\n            return state    \r\n    }\r\n}\r\n\r\nfunction toggleCategoryFilter(state, action) {\r\n    return {\r\n        ...state,\r\n        categoryFilters: {\r\n            ...state.categoryFilters,\r\n            [action.category]: !state.categoryFilters[action.category]\r\n        }\r\n    }\r\n}\r\n\r\nfunction toggleNeighborhoodFilter(state, action) {\r\n    return {\r\n        ...state,\r\n        neighborhoodFilters: {\r\n            ...state.neighborhoodFilters,\r\n            [action.neighborhood]: !state.neighborhoodFilters[action.neighborhood]\r\n        }\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","import { actionTypes } from './actions'\r\n\r\nconst initialState = {\r\n    isFetched: false,\r\n    restaurants: [],\r\n}\r\n\r\nfunction reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case actionTypes.RESTAURANTS_FETCHED:\r\n            return setRestaurants(state, action)\r\n\r\n        default :\r\n            return state    \r\n    }\r\n}\r\n\r\nfunction setRestaurants(state, action) {\r\n    return {\r\n        ...state,\r\n        isFetched: true,\r\n        restaurants: [...action.restaurants]\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux'\r\nimport uiHome from './ui-Home/reducers'\r\nimport restaurant from './restaurant/reducers'\r\n\r\nexport default combineReducers({\r\n    uiHome,\r\n    restaurant\r\n}); ","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../redux/root-reducer\";\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    applyMiddleware(...middleware)\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport Layout from '../components/layouts/MainLayout'\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Provider store={store}>\n                <BrowserRouter>\n                    <Layout />\n                </BrowserRouter>\n            </Provider>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}